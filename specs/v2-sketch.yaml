openapi: "3.0.0"
info:
  version: 1.0.0
  title: CircleCI API v2
  license:
    name: MIT
servers:
  - url: http://circleci.com/api/v2
paths:
  /me:
    get:
      summary: Return basic user information of the owner of the requested token
      operationId: me
      responses:
        '200':
          description: A map of simple user information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Me"
  /workflow/{id}:
    get:
      summary: Return summary fields of a workflow by ID
      operationId: GET workflow by ID
      parameters:
        - name: id
          in: path
          description: ID of the workflow
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An object with workflow information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /workflow/{id}/jobs:
    get:
      summary: Return all the known jobs of a given workflow
      operationId: GET workflow jobs by ID
      parameters:
        - name: id
          in: path
          description: ID of the workflow
          required: true
          schema:
            type: string
            format: uuid
        - name: page_token
          in: query
          description: Page token
          schema:
            type: string
        - name: page_size
          in: query
          description: Number of jobs to return per page of results, default 50
          schema:
            type: number
            format: integer
      responses:
        '200':
          description: a paginated set of a workflow's jobs as an inverted adjacency list
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_page_token:
                    type: string
                  jobs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Job"
components:
  schemas:
    Me:
      # minimise breaking changes from /api/v1.1/me
      # See https://github.com/circleci/circle/blob/gordon/disable-build-archive/src/circle/model/user.clj#L755-L765
      type: object
      properties:
        login:
          type: string
        created_at:
          type: string
          format: date-time
        name:
          type: string
        # no idea what `admin` really is
        #admin:
        # type: boolean?
        basic_email_prefs:
          type: string
          enum: ["all", "smart", "none"]
          # This is literally a map of vcs_url to {"on_dashboard": boolean, "emails": "default"}
        projects:
          type: object
          example: {"https://github.com/username/my_project": {"on_dashboard": true, "emails": "smart"}}
          additionalProperties:
            type: object
            properties:
              on_dashboard:
                type: boolean
              emails:
                type: string
                enum: ["all", "smart", "none", "default"]
        organization-prefs:
          type: object
          example: {"github": {"username": {"email": "username@example.com"}}}
          additionalProperties:
            type: object
            additionalProperties:
              type: object
              properties:
                email:
                  type: string
        trial-end:
          type: string
          format: date-time
        plan:
          type: object
          description: I am not certain what this looks like, I'm somewhat afraid it's a Plan document.
          deprecated: true
        sign_in_count:
          type: number
          format: integer
        first_vcs_authorized_client_id:
          type: string
          description: ??
          deprecated: true
        parallelism:
          type: number
          format: integer
        dev_admin:
          type: boolean
          description: Not sure
          deprecated: true
        in_beta_program:
          type: boolean
        bitbucket_authorized:
          type: boolean
          description: This is a remnant of not being a platform, do we really want to expose it?
          deprecated: true
        enrolled_betas:
          type: array
          items:
            type: string
        analytics_id:
          type: string
          format: uuid
          description: can we call this "id", please?
        student:
          type: boolean
          default: false
        privacy-optout:
          type: boolean
          description: Opt out of analytics trackers
#concurrency
#   Appears unused
#
#encrypted-heroku-api-key
#   Nope, not including credentials, encrypted or not.
#
#plans
#   Not sure what these should be
        containers:
          type: number
          format: integer
        num_projects_followed:
          type: number
          format: integer
        days_left_in_trial:
          type: number
          format: integer
        all_emails:
          type: array
          example: ["username@example.com"]
          items:
            type: string
        selected_email:
          type: string
          example: "username@example.com"
        avatar_url:
          type: string
          example: "https://avatars.example.com/369ea08d7172bfc72207e2ae1c1b17ef"
# github_id
# bitbucket
# bitbucket-authorized
# pusher-id
#   These all feel far too specific, should be rolled into "identities", right?
#
# github-oauth-scopes
#   don't wanna include GitHub oauth scopes
#
# heroku-api-key
#   Nope, not including credentials, obfuscated or not
        identities:
          type: object
          additionalProperties:
            type: object
            properties:
              avatar_url:
                type: string
                example: "https://avatars.example.com/369ea08d7172bfc72207e2ae1c1b17ef"
              external_id:
                anyOf:
                  - type: string
                  - type: number
                example: 1234567
              id:
                anyOf:
                  - type: string
                  - type: number
                example: 1234567
              name:
                type: string
                example: "User Name"
              user?:
                type: boolean
              domain:
                type: string
                example: "github.com"
              type:
                type: string
                example: "github"
              authorized?:
                type: boolean
              provider_id:
                type: string
                format: uuid
              login:
                type: string
                example: "username"
    Actor:
      type: object
      properties:
        login:
          type: string
        name:
          type: string
        id:
          type: string
          format: uuid
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        # add a link to the project, Pat suggested we consider link headers
    # Elide from Workflow for the time being. If we can get pipelines in weeks we don't need this. Backup plan if people shout is to put this into the Workflow response.
    TriggerSummary:
      type: object
      properties:
        type:
          type: string
          enum: ["webhook", "api", "schedule"]
        actor:
          $ref: "#/components/schemas/Actor"
        vcs:
          type: object
          properties:
            branch:
              type: object
              properties:
                name:
                  type: string
                default_branch:
                  type: boolean
            tag:
              type: string
            commit:
              type: string
    Workflow:
      type: object
      required:
        - id
        - name
        - created_at
        - project
        - errors
        - status
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
        stopped_at:
          type: string
          format: date-time
        # No pipeline entity here. Avoid cycles in the graph
        pipeline_id:
          type: string
          format: uuid
        pipeline_number:
          type: number
          format: integer
        project:
          $ref: "#/components/schemas/Project"
        #trigger_summary:
        #  $ref: "#/components/schemas/TriggerSummary"
        # See https://github.com/circleci/api-service/blob/master/resources/schema.edn#L52
        status:
          type: string
          enum: ["unauthorized", "error", "not_run",
                 "running", "failing", "on_hold",
                 "canceled", "failed", "success"]
    Job:
      type: object
      required:
        - id
        - name
        - type
        - status
        - start_time
        - dependencies
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        # workflows-conductor supports
        # :build
        # :approval
        type:
          type: string
          enum: ["build", "approval"]
        # Full list of statuses from circle.model.build
        # :retried
        # :canceled
        # :infrastructure_fail
        # :timedout
        # :not_run
        # :running
        # :failed
        # :queued
        # :scheduled
        # :not_running
        # :no_tests
        # :fixed
        # :success
        status:
          type: string
          enum: ["not_run", "queued", "not_running", "running",
                 "canceled", "infrastructure_fail", "retried",
                 "timedout", "failed", "success"]
        start_time:
          type: string
          format: date-time
        # NB stop_time is not required
        stop_time:
          type: string
          format: date-time
        dependencies:
          type: array
          items:
            type: string
            format: uuid
